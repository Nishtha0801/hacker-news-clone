{"ast":null,"code":"var _jsxFileName = \"/Users/nishthagoyal/Desktop/hack-new/hacker-news-clone/src/containers/Feed.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Spinner from \"react-spinkit\";\nimport Story from \"../components/Story\";\nconst ListWrap = styled.div`\n  margin: 25px;\n`;\nconst LoadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 55px;\n`;\nexport default class Feed extends Component {\n  render() {\n    this.items = this.props.items;\n\n    if (this.items === undefined || this.items.length === 0) {\n      return /*#__PURE__*/React.createElement(LoadWrap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        name: \"ball-scale-ripple-multiple\",\n        color: \"olive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return this.renderList(this.items);\n    }\n  }\n\n  renderList(items) {\n    return /*#__PURE__*/React.createElement(ListWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, items.map((item, i) => /*#__PURE__*/React.createElement(Story, {\n      key: item.id,\n      item: item,\n      hideData: this.props.hideData,\n      upVote: this.props.upVote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nFeed.propTypes = {\n  items: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/nishthagoyal/Desktop/hack-new/hacker-news-clone/src/containers/Feed.js"],"names":["React","Component","PropTypes","styled","Spinner","Story","ListWrap","div","LoadWrap","Feed","render","items","props","undefined","length","renderList","map","item","i","id","hideData","upVote","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAI;;CAA5B;AAGA,MAAMC,QAAQ,GAAGL,MAAM,CAACI,GAAI;;;;;CAA5B;AAOA,eAAe,MAAME,IAAN,SAAmBR,SAAnB,CAA6B;AAC1CS,EAAAA,MAAM,GAAG;AACP,SAAKC,KAAL,GAAa,KAAKC,KAAL,CAAWD,KAAxB;;AAEA,QAAI,KAAKA,KAAL,KAAeE,SAAf,IAA4B,KAAKF,KAAL,CAAWG,MAAX,KAAsB,CAAtD,EAAyD;AACvD,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,4BAAd;AAA2C,QAAA,KAAK,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAMO;AACL,aAAO,KAAKC,UAAL,CAAgB,KAAKJ,KAArB,CAAP;AACD;AACF;;AAEDI,EAAAA,UAAU,CAACJ,KAAD,EAAQ;AAChB,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,oBAAC,KAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACE,EADZ;AAEE,MAAA,IAAI,EAAEF,IAFR;AAGE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWQ,QAHvB;AAIE,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAYD;;AA5ByC;AA+B5CZ,IAAI,CAACa,SAAL,GAAiB;AACfX,EAAAA,KAAK,EAAET,SAAS,CAACqB,KAAV,CAAgBC;AADR,CAAjB","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Spinner from \"react-spinkit\";\nimport Story from \"../components/Story\";\n\nconst ListWrap = styled.div`\n  margin: 25px;\n`;\nconst LoadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 55px;\n`;\n\nexport default class Feed extends Component {\n  render() {\n    this.items = this.props.items;\n\n    if (this.items === undefined || this.items.length === 0) {\n      return (\n        <LoadWrap>\n          <Spinner name=\"ball-scale-ripple-multiple\" color=\"olive\" />\n        </LoadWrap>\n      );\n    } else {\n      return this.renderList(this.items);\n    }\n  }\n\n  renderList(items) {\n    return (\n      <ListWrap>\n        {items.map((item, i) => (\n          <Story\n            key={item.id}\n            item={item}\n            hideData={this.props.hideData}\n            upVote={this.props.upVote}\n          />\n        ))}\n      </ListWrap>\n    );\n  }\n}\n\nFeed.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}